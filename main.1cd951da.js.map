{"version":3,"sources":["scripts/main.js"],"names":["waitFor","element","eventName","Promise","resolve","addEventListener","nodeName","id","printMessage","message","notificationMessage","document","createElement","className","textContent","body","append","module","exports"],"mappings":";AAAA,aAEA,SAASA,EAAQC,EAASC,GACjB,OAAA,IAAIC,QAAQ,SAAAC,GACjBH,EAAQI,iBAAiBH,EAAW,WAClCE,EAAkBF,UAAAA,OAAAA,EACdD,8BAAAA,OAAAA,EAAQK,SAAiBL,UAAAA,OAAAA,EAAQM,GADrC,UAMN,IAAMC,EAAe,SAACC,GACdC,IAAAA,EAAsBC,SAASC,cAAc,OAEnDF,EAAoBG,UAAY,UAChCH,EAAoBI,YAAcL,EAClCE,SAASI,KAAKC,OAAON,IAGvBO,OAAOC,QAAU,CACflB,QAAAA,EACAQ,aAAAA","file":"main.1cd951da.js","sourceRoot":"..\\src","sourcesContent":["'use strict';\n\nfunction waitFor(element, eventName) {\n  return new Promise(resolve => {\n    element.addEventListener(eventName, () => {\n      resolve(`It was ${eventName} on the element:\n        ${element.nodeName}, id: ${element.id}.`);\n    });\n  });\n}\n\nconst printMessage = (message) => {\n  const notificationMessage = document.createElement('div');\n\n  notificationMessage.className = 'message';\n  notificationMessage.textContent = message;\n  document.body.append(notificationMessage);\n};\n\nmodule.exports = {\n  waitFor,\n  printMessage,\n};\n"]}